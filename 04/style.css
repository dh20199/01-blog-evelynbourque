/* not really that important, just a reset to make things easier. */
html, html * {
    box-sizing: border-box;
    
}


main {
    background-color: rgba(80,80,80,0.2);
    min-height: 100vh;
    display: grid;
    grid-template-areas: "nav nav nav"
                         "side art aside"
                         "side art aside";
    grid-template-columns: 
    grid-template-rows: 
    grid-gap: 
}


main>* {
    border: orange solid 1px;   /*sorry for the horrible color*/
    border-radius: 10px;
    text-align: center;         /*keep the text centered horizontally*/
    
}


aside {
    background-color: rgba(143, 81, 188, 0.3);
    grid-area: 3fr;
}

fill in ~flex-direction~ and optionally ~justify-content~ and ~align-items~ to make the ~section.sidebar~ flexbox layout work right
section.sidebar {
    background-color: rgba(150, 112, 36, 0.3);
    grid-area: 1fr;
    display: flex; 
    flex-direction: row;
    justify-content: space-between;           /*these last two are optional*/
    align-items: center;
}

section.sidebar img {
    max-width: 80%; /* you'll see why this is useful soon, I promise!*/
    border: 1px solid black;
    border-radius: 5px;
}

nav {
    background-color: rgba(30,200,30,0.3);

}

article {
    background-color: rgba(30,30,30,0.4);
    grid-area: 2fr;
    display: grid ;
    grid-template-columns: repeat (5, 1fr);
    grid-template-rows: repeat (5, 1fr);
    grid-gap:                   /*the gap is optional*/    
}

/* these next two are just simple styling to make the div boxes visible */
article > div {
    border: blue 1px solid;
    border-radius: 10px;
    background-color: rgba(50,50,200,0.3);
}

article div section {
    line-height:2;
    background-color: rgba(10,10,200,0.5);
    
}

/* use the grid-row and grid-column values to place the boxes precisely onto the grid */
#box1 {
    grid-row: 1fr 1fr 4fr 1fr 1fr;
    grid-column: 1/3;
}

#box2 {
    grid-row: 1fr 1fr 4fr 1fr 1fr;
    grid-column: 2/4;
}

#box3 {
    grid-row: 1fr 1fr 4fr 1fr 1fr;
    grid-column: 3/5;
}

#box4 {
    grid-row: 1fr 1fr 4fr 1fr 1fr;
    grid-column: 4/6;
}

#box5 {
    grid-row: 
    grid-column: 
    background-color: rgba(200,10,10,0.3)
}


@media (max-width: 576px) {
    main {
        /* when the screen shrinks, reorganize the main grid and don't stretch beyond height */
        max-height: 100vh;
        grid-template-areas: "nav"
                             "art"
                             "side"
                             "aside";
        grid-template-columns: 1fr; /* this is the default value, but it we need to reset the value we set at line 15 */
        grid-template-rows: 80px 1fr 120px 80px;
    }
    section.sidebar {
        flex-direction: ;       /* when the screen shrinks, change direction.*/
    }
    
    section.sidebar img {       /* I'vefilled these in for you; feel free to fool with them if you like. */
        flex: 1;
        max-height: 40%;
        flex-shrink: 1;
    }
}
